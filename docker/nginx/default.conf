# #--------------------------------------------------------
# # Nuxt.JS server configuration
# #--------------------------------------------------------

# map $sent_http_content_type $expires {
#     "text/html"                 epoch;
#     "text/html; charset=utf-8"  epoch;
#     default                     off;
# }

# server {
#     listen 80;

#     # add_header Access-Control-Allow-Headers 'Content-Type, Authorization';
#     # add_header Access-Control-Allow-Origin $http_origin;
#     # add_header Access-Control-Allow-Methods 'GET, POST, PUT, PATCH, DELETE, HEAD, OPTIONS';

#     add_header X-Frame-Options "SAMEORIGIN";
#     add_header X-XSS-Protection "1; mode=block";
#     add_header X-Content-Type-Options "nosniff";

#     charset utf-8;

#     gzip            on;
#     gzip_types      text/plain application/xml text/css application/javascript;
#     gzip_min_length 1000;

#     location / {
#         if ($request_method = 'OPTIONS') {
#             add_header Access-Control-Allow-Headers 'Content-Type, Authorization';
#             add_header Access-Control-Allow-Origin $http_origin;
#             add_header Access-Control-Allow-Methods 'GET, POST, PUT, PATCH, DELETE, HEAD, OPTIONS';
#         }

#         # Proxy to Node.JS instance
#         proxy_pass http://client:3000;

#         expires $expires;

#         proxy_redirect                      off;
#         proxy_set_header X-Real-IP          $remote_addr;
#         proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto  $scheme;
#         proxy_read_timeout                  1m;
#         proxy_connect_timeout               1m;

#         # Websocket support
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_cache_bypass $http_upgrade;
#     }

#     # Proxy all API requests
#     # location /api {
#     #     proxy_pass http://nginx:81;
#     # }

#     # location /admin {
#     #     rewrite /admin/_nuxt/(.*)$ /admin/_nuxt/$1 break;
#     #     rewrite /admin/(.*)$ /admin/$1 break;
#     #     proxy_pass http://admin:3000/admin/;

#     #     expires $expires;

#     #     proxy_redirect                      off;
#     #     proxy_set_header X-Real-IP          $remote_addr;
#     #     proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
#     #     proxy_set_header X-Forwarded-Proto  $scheme;
#     #     proxy_read_timeout                  1m;
#     #     proxy_connect_timeout               1m;

#     #     # Websocket support
#     #     proxy_http_version 1.1;
#     #     proxy_set_header Upgrade $http_upgrade;
#     #     proxy_set_header Connection 'upgrade';
#     #     proxy_set_header Host $host;
#     #     proxy_cache_bypass $http_upgrade;
#     # }
# }

# server {
#     listen 80;
#     listen [::]:80;
#     root /var/www/admin;
#     server_name admin.boilerplate.local;

#     # add_header Access-Control-Allow-Headers 'Content-Type, Authorization';
#     # add_header Access-Control-Allow-Origin $http_origin;
#     # add_header Access-Control-Allow-Methods 'GET, POST, PUT, PATCH, DELETE, HEAD, OPTIONS';

#     add_header X-Frame-Options "SAMEORIGIN";
#     add_header X-XSS-Protection "1; mode=block";
#     add_header X-Content-Type-Options "nosniff";

#     charset utf-8;

#     gzip            on;
#     gzip_types      text/plain application/xml text/css application/javascript;
#     gzip_min_length 1000;

#     location / {
#         if ($request_method = 'OPTIONS') {
#             add_header Access-Control-Allow-Headers 'Content-Type, Authorization';
#             add_header Access-Control-Allow-Origin $http_origin;
#             add_header Access-Control-Allow-Methods 'GET, POST, PUT, PATCH, DELETE, HEAD, OPTIONS';
#         }

#         # Proxy to Node.JS instance
#         rewrite /admin/_nuxt/(.*)$ /admin/_nuxt/$1 break;
#         rewrite /admin/(.*)$ /admin/$1 break;
#         proxy_pass http://admin:3000/;

#         expires $expires;

#         proxy_redirect                      off;
#         proxy_set_header X-Real-IP          $remote_addr;
#         proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto  $scheme;
#         proxy_read_timeout                  1m;
#         proxy_connect_timeout               1m;

#         # Websocket support
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_cache_bypass $http_upgrade;
#     }
# }

# server {
#     listen 80;
#     root /var/www/api;
#     server_name api.boilerplate.local;

#     # add_header Access-Control-Allow-Headers 'Content-Type, Authorization';
#     # add_header Access-Control-Allow-Origin $http_origin;
#     # add_header Access-Control-Allow-Methods 'GET, POST, PUT, PATCH, DELETE, HEAD, OPTIONS';

#     add_header X-Frame-Options "SAMEORIGIN";
#     add_header X-XSS-Protection "1; mode=block";
#     add_header X-Content-Type-Options "nosniff";

#     charset utf-8;

#     gzip            on;
#     gzip_types      text/plain application/xml text/css application/javascript;
#     gzip_min_length 1000;

#     # Proxy all API requests
#     location / {
#         if ($request_method = 'OPTIONS') {
#             add_header Access-Control-Allow-Headers 'Content-Type, Authorization';
#             add_header Access-Control-Allow-Origin $http_origin;
#             add_header Access-Control-Allow-Methods 'GET, POST, PUT, PATCH, DELETE, HEAD, OPTIONS';
#         }

#         proxy_pass http://nginx:81;
#     }
# }

# #--------------------------------------------------------
# # Laravel server configuration
# #--------------------------------------------------------
# server {
#     #listen 443 ssl;
#     listen 81;

#     index index.php index.html;
#     root /var/www/api/public;
#     charset utf-8;

#     client_max_body_size 20m;

#     # SSL for 443
#     #ssl_certificate /etc/nginx/ssl/ssl-cert-snakeoil.pem;
#     #ssl_certificate_key /etc/nginx/ssl/ssl-cert-snakeoil.key;

#     location / {
#         try_files $uri $uri/ /index.php?$args;
#     }

#     location = /favicon.ico { access_log off; log_not_found off; }
#     location = /robots.txt  { access_log off; log_not_found off; }

#     error_page 404 /index.php;

#     # Handle all php files (which will always be just /index.php)
#     # via factcgi PHP-FPM unix socket
#     location ~ \.php$ {
#         fastcgi_split_path_info ^(.+\.php)(/.+)$;
#         fastcgi_pass php-fpm:9000;
#         fastcgi_index index.php;
#         # For comfortable debugging
#         fastcgi_read_timeout 1000;
#         include fastcgi_params;
#         fastcgi_param SCRIPT_FILENAME $document_root/$fastcgi_script_name;
#         fastcgi_param PATH_INFO $fastcgi_path_info;
#     }

#     location ~ /\.(?!well-known).* {
#         deny all;
#     }
# }
